@model HseqCentralApp.Models.Par

@using HseqCentralApp.Helpers;
@using HseqCentralApp.Models;

@using (Ajax.BeginForm("ParGridViewNew", "Navigation",
                new AjaxOptions
                {
                    HttpMethod = "Post",
                    UpdateTargetId = "CenterSplitterPane",
                    InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace,
                    OnFailure = "PostFailure",
                    OnSuccess = "PostSuccess",
                    OnComplete = "PostOnComplete"
                }))
{

    @Html.HiddenFor(m => m.CaseNo)
    @Html.HiddenFor(m => m.RecordNo)
    @Html.HiddenFor(m => m.RecordType)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.DateCreated)

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);

    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "New PAR: " + Model.CaseNo;

        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

    });

    groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

    groupItem.SettingsItemHelpTexts.Position = HelpTextPosition.Auto;

    groupItem.ColCount = 2;

    groupItem.Items.Add(m => m.Title, item =>
    {
        item.ColSpan = 2;
        item.NestedExtensionSettings.Width = Unit.Percentage(100);
        item.NestedExtension().TextBox(s =>
        {
            s.Width = Unit.Percentage(100);
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.Description, i =>
    {
        i.ColSpan = 2;
        i.NestedExtension().Memo(s =>
        {
            s.Width = Unit.Percentage(100);
            s.Height = Unit.Pixel(100);
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.CaseNo, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.RecordNo, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.JobNumber, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
        // item.HelpText = "Help text for JobNumber";
    });

    groupItem.Items.Add(m => m.DrawingNumber, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.ReportedBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.CoordinatorID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "FullName";
            s.Properties.ValueField = "HseqUserID";
            s.Properties.DataSource = Utils.AppUsers();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";

            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.HseqRecordID, item =>
    {
        item.Visible = false;
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.AlfrescoNoderef, item =>
    {
        item.Visible = false;
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.EnteredBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            s.ShowModelErrors = true;

        });
    });

    groupItem.Items.Add(m => m.LinkedRecordsID, item =>
    {
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.HseqCaseFileID, item =>
    {
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.DateCreated, item =>
    {
        item.NestedExtension().DateEdit(s =>
        {
            s.ClientEnabled = false;
        });

        item.Visible = false;

    });

    groupItem.Items.Add(m => m.DateLastUpdated, item =>
    {
        item.NestedExtension().DateEdit(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.CreatedBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.LastUpdatedBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });
    ///////////////////////////////////////////////////////////////////////////////

    settings.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
    }).SetNestedContent(() =>
    {
        ViewContext.Writer.Write("<div style='float:right'>");
        Html.DevExpress().Button(
            s =>
            {
                s.Name = "parCreateButton";
                s.Text = "Create";
                s.UseSubmitBehavior = true;
            }).Render();
        Html.DevExpress().Button(
            s =>
            {
                s.Name = "editCancelButton";
                s.Text = "Cancel";
                s.UseSubmitBehavior = true;
                s.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
            }).Render();
        ViewContext.Writer.Write("</div>");
    });

}).Bind(Model).GetHtml()

}