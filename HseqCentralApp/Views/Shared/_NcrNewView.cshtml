@model HseqCentralApp.Models.Ncr

@using HseqCentralApp.Helpers;
@using HseqCentralApp.Models;

@*@using (Html.BeginForm("NcrGridViewUpdate", "Navigation"))*@

@using (Ajax.BeginForm("NcrGridViewNew", "Navigation", 
    new AjaxOptions { 
        HttpMethod = "Post", 
        UpdateTargetId = "CenterSplitterPane",
        InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace,
        OnFailure = "PostFailure", 
        OnSuccess = "PostSuccess", 
        OnComplete = "PostOnComplete" 
    }))
    {
        
    @Html.HiddenFor(m => m.CaseNo)
    @Html.HiddenFor(m => m.RecordNo)
    @Html.HiddenFor(m => m.RecordType)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.DateCreated)

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);
    //settings.Items.AddGroupItem(groupSettings =>
    //{

    //    groupSettings.Caption = "New NCR: " + Model.CaseNo;

    //    groupSettings.ShowCaption = DefaultBoolean.True;
    //    groupSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

    //    groupSettings.Items.Add(m => m.Title, item =>
    //    {
    //        item.NestedExtensionSettings.Width = Unit.Percentage(100);
    //        item.NestedExtension().TextBox(s =>
    //        {
    //        });
    //    });

    //    groupSettings.Items.Add(m => m.Description, i =>
    //    {
    //        i.NestedExtension().Memo(s =>
    //        {
    //            s.Width = Unit.Percentage(100);
    //            s.Height = Unit.Pixel(100);

    //        });
    //    });

    //});

    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "New NCR: " + Model.CaseNo;

        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

    });

    //groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;

    groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

    groupItem.SettingsItemHelpTexts.Position = HelpTextPosition.Auto;

    groupItem.ColCount = 2;


    groupItem.Items.Add(m => m.Title, item =>
    {
        item.ColSpan = 2;
        item.NestedExtensionSettings.Width = Unit.Percentage(100);
        item.NestedExtension().TextBox(s =>
        {
            s.Width = Unit.Percentage(100);
        });
    });

    groupItem.Items.Add(m => m.Description, i =>
    {
        i.ColSpan = 2;
        i.NestedExtension().Memo(s =>
        {
            s.Width = Unit.Percentage(100);
            s.Height = Unit.Pixel(100);

        });
    });

    groupItem.Items.Add(m => m.CaseNo, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            //s.Style[HtmlTextWriterStyle.Color] = "red";
            //s.ReadOnly = true;
            s.ClientEnabled = false;

        });
        item.Visible = false;
    });
    groupItem.Items.Add(m => m.RecordNo, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });




    //groupItem.Items.Add(m => m.RecordType, i =>
    //{
    //    i.NestedExtension().ComboBox(s =>
    //    {
    //        s.Properties.Items.AddRange(typeof(RecordType).GetEnumValues());
    //        s.Properties.TextField = "Name";
    //        s.Properties.ValueField = "RecordType";

    //        s.Properties.ValueType = typeof(string);
    //        s.Properties.DropDownStyle = DropDownStyle.DropDown;

    //    });

    //    i.Visible = false;
    //});

    groupItem.Items.Add(m => m.JobNumber, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            //s.Width = Unit.Percentage(100);
            s.ClientEnabled = false;
        });


        // item.HelpText = "Help text for JobNumber";
    });
    groupItem.Items.Add(m => m.DrawingNumber, item =>
    {
        // item.HelpText = "Help text for DrawingNumber";
    });

    groupItem.Items.Add(m => m.NcrSource, i =>
    {
        //i.HelpText = "Leave a little bit of information<br/>about yourself";
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "NcrSource";
            s.Properties.ValueField = "NcrSource";
            s.Properties.ValueType = typeof(string);

            s.Properties.Items.AddRange(typeof(NcrSource).GetEnumValues());
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";
        });
    });

    groupItem.Items.Add(m => m.NcrState, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "NcrState";
            s.Properties.ValueField = "NcrState";
            s.Properties.ValueType = typeof(string);

            s.Properties.Items.AddRange(typeof(NcrState).GetEnumValues());
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";
        });
    });

    groupItem.Items.Add(m => m.DiscrepancyTypeID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "Name";
            s.Properties.ValueField = "DiscrepancyTypeID";
            s.Properties.DataSource = Utils.DiscrepancyTypes();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";
        });
    });

    groupItem.Items.Add(m => m.ReportedBy, item =>
    {
        // item.HelpText = "Help text for ReportedBy";
    });



    groupItem.Items.Add(m => m.DetectedInAreaID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "Name";
            s.Properties.ValueField = "BusinessAreaID";
            s.Properties.DataSource = Utils.BusinessAreas();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";
        });
    });

    groupItem.Items.Add(m => m.ResponsibleAreaID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "Name";
            s.Properties.ValueField = "BusinessAreaID";
            s.Properties.DataSource = Utils.BusinessAreas();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
        });
    });

    groupItem.Items.Add(m => m.ResponsibleParty, item =>
    {
        // item.HelpText = "Help text for ResponsibleParty";
    });

    groupItem.Items.Add(m => m.CoordinatorID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "FullName";
            s.Properties.ValueField = "HseqUserID";
            s.Properties.DataSource = Utils.AppUsers();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
            s.Properties.ClientSideEvents.Init = "function(s,e){if(s.GetValue()=='0'){ s.SetValue(null);} }";
        });
    });

    groupItem.Items.Add(m => m.HseqRecordID, item =>
    {
        item.Visible = false;
    });
    groupItem.Items.Add(m => m.AlfrescoNoderef, item =>
    {
        item.Visible = false;
    });


    groupItem.Items.Add(m => m.EnteredBy, item =>
    {
        // item.HelpText = "Help text for EnteredBy";
    });

    groupItem.Items.Add(m => m.DispositionTypeID, i =>
    {
        i.NestedExtension().ComboBox(s =>
        {
            s.Properties.TextField = "Name";
            s.Properties.ValueField = "DispositionTypeID";
            s.Properties.DataSource = Utils.DispositionTypes();
            s.Properties.ValueType = typeof(string);
            s.Properties.DropDownStyle = DropDownStyle.DropDown;
        });
    });



    groupItem.Items.Add(m => m.LinkedRecordsID, item =>
    {
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.HseqCaseFileID, item =>
    {
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.DateCreated, item =>
    {
        item.NestedExtension().DateEdit(s =>
        {
            s.ClientEnabled = false;
        });

        item.Visible = false;

    });
    groupItem.Items.Add(m => m.DateLastUpdated, item =>
    {
        item.NestedExtension().DateEdit(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });
    groupItem.Items.Add(m => m.CreatedBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });
    groupItem.Items.Add(m => m.LastUpdatedBy, item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.ClientEnabled = false;
        });
        item.Visible = false;
    });

    groupItem.Items.Add(m => m.DispositionNote, i =>
    {
        i.ColSpan = 2;
        i.NestedExtension().Memo(s =>
        {
            s.Width = Unit.Percentage(100);
            s.Height = Unit.Pixel(75);
        });
    });

    groupItem.Items.Add(m => m.CauseDesc, i =>
    {
        i.ColSpan = 2;
        i.NestedExtension().Memo(s =>
        {
            s.Width = Unit.Percentage(100);
            s.Height = Unit.Pixel(75);
        });
    });

    //groupItem.Items.Add(m => m.Delegatables, item =>
    //{
    //    item.Visible = false;
    //});

    //settings.Items.Add(i =>
    //{
    //    i.ShowCaption = DefaultBoolean.False;
    //    i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    //    i.Width = 150;
    //    i.NestedExtension().Button(s =>
    //    {
    //        s.Name = "ncrUpdateButton";
    //        s.Text = "Update";
    //        s.UseSubmitBehavior = true;

    //        //s.ClientSideEvents.Click = "function(s, e){ NcrGridView.UpdateEdit(); }";
    //    });
    //});

    //settings.Items.Add(i =>
    //{
    //    i.ShowCaption = DefaultBoolean.False;
    //    i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    //    i.Width = 150;
    //    i.NestedExtension().Button(s =>
    //    {
    //        s.Name = "ncrCancelButton";
    //        s.Text = "Cancel";
    //        s.UseSubmitBehavior = true;
    //        //s.ClientSideEvents.Click = "ncrEditCancel";
    //    });
    //});
    ///////////////////////////////////////////////////////////////////////////////

    settings.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
    }).SetNestedContent(() =>
    {
        ViewContext.Writer.Write("<div style='float:right'>");
        Html.DevExpress().Button(
            s =>
            {
                s.Name = "ncrUpdateButton";
                s.Text = "Create";
                s.UseSubmitBehavior = true;
            }).Render();
        Html.DevExpress().Button(
            s =>
            {
                s.Name = "editCancelButton";
                s.Text = "Cancel";
                s.UseSubmitBehavior = true;
                s.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
            }).Render();
        ViewContext.Writer.Write("</div>");
    });

}).Bind(Model).GetHtml()

}